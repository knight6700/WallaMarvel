name: iOS CI with Arkana

env:
  MARVEL_PUBLIC_DEBUG: ${{ secrets.MARVEL_PUBLIC_DEBUG }}
  MARVEL_PRIVATE_DEBUG: ${{ secrets.MARVEL_PRIVATE_DEBUG }}
  MARVEL_PUBLIC_RELEASE: ${{ secrets.MARVEL_PUBLIC_RELEASE }}
  MARVEL_PRIVATE_RELEASE: ${{ secrets.MARVEL_PRIVATE_RELEASE }}

on:
  push:
    branches: [develop]
  pull_request:
    branches: [develop]

jobs:
  lint:
    name: Run SwiftLint
    runs-on: macos-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Install SwiftLint
        run: brew install swiftlint

      - name: Run SwiftLint
        run: |
          swiftlint --config marvelCore/.swiftlint.yml
      - name: Set up Xcode 16.3
        uses: maxim-lobanov/setup-xcode@v1
        with:
          xcode-version: '16.3'

      - name: Verify Swift version
        run: swift --version
  build:
    name: Build and Test App
    runs-on: macos-latest
    needs: lint  # <- This ensures lint must pass before build starts

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Xcode
        run: sudo xcode-select -s /Applications/Xcode_15.0.app

      - name: Install dependencies
        run: |
          brew install arkana-cli || true
          gem install bundler
          bundle install

      - name: Set Marvel API keys and run Arkana
        run: |
          echo "Setting Marvel API keys for Arkana..."
          export publicKeyDebug="$MARVEL_PUBLIC_DEBUG"
          export privateKeyDebug="$MARVEL_PRIVATE_DEBUG"
          export publicKeyRelease="$MARVEL_PUBLIC_RELEASE"
          export privateKeyRelease="$MARVEL_PRIVATE_RELEASE"
          
          echo "Keys loaded:"
          echo "- publicKeyDebug: ${publicKeyDebug:0:4}..."
          echo "- privateKeyDebug: ${privateKeyDebug:0:4}..."
          echo "- publicKeyRelease: ${publicKeyRelease:0:4}..."
          echo "- privateKeyRelease: ${privateKeyRelease:0:4}..."
          
          bundle exec arkana

      - name: Build the app
        run: |
          xcodebuild clean build \
            -project WallaMarvel.xcodeproj \
            -scheme WallaMarvel \
            -configuration Debug \
            -destination 'platform=iOS Simulator,name=iPhone 16,OS=18.4'

      - name: Test the app
        run: |
          xcodebuild test \
            -project WallaMarvel.xcodeproj \
            -scheme MarvelCoreTests \
            -destination 'platform=iOS Simulator,name=iPhone 16,OS=18.4'

      - name: Run snapshot tests
        run: |
          xcodebuild test \
            -project WallaMarvel.xcodeproj \
            -scheme MarvelSnapshotTests \
            -destination 'platform=iOS Simulator,name=iPhone 16,OS=18.4'
